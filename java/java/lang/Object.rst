.. py:currentmodule:: java.lang

Object - корневой класс в иерархии классов
==========================================

.. py:class:: Object()

    Если при описании класса не указывается родительский, то им считается класс Object. Все объекты, включая массивы, наследуются от этого класса. 


    .. py:method:: protected native Object clone() throws CloneNotSupportedException

        Создает копию объекта. Для того, что бы им можно было воспользоваться, объект должен реализовывать интерфейс Cloneable. Этот интерфейс не определяет никаких методов, определение, что класс его реализует - только символизирует, что можно создавать копии объектов этого класса. 

        В классе Object метод clone() реализован таким образом, что будут скопированы только базовые типы и ссылки на объекты. Если же потребуется "глубокое " копирование, то есть скопировать не только ссылки на объекты, но и создать копии объектов - в классах-наследниках метод clone() можно переопределить.


    .. py:method:: public boolean equals(Object obj)

        Сравнение объектов

        ::

            public boolean equals(Object obj) {
                return (this == obj);
            }


    .. py:method:: protected void finalize() throws Throwable

        Этот метод вызывается Java-машиной перед тем, как сборщик мусора очистит память, занимаемую объектом. 

        Реализация этого метода в классе Object - не производит никаких действий. В классах-наследниках этот метод может быть переопределен для проведения всех необходимых действий по освобождению различных занимаемых ресурсов - закрытия сетевых соединений, файлов и т.д.


    .. py:method:: public final native Class getClass()

        Возвращает объект типа Class, соответствующий классу объекта. Именно этот объект используется при использовании синхронизации статических методов.
        

    .. py:method:: public int hashCode()

        Хешкод объекта


    .. py:method:: public String toString()

        Строковое представление объекта

        ::

            public String toString() {
                return getClass().getName() + "@" + Integer.toHexString(hashCode());
            }
            

    .. py:method:: final notify()

        Используются для поддержки многопоточности
            

    .. py:method:: final notifyAll()

        Используются для поддержки многопоточности


    .. py:method:: final wait()

        Используются для поддержки многопоточности



