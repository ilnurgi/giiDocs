.. py:method:: calendar

calendar
========

позволяет вывести календарь в виде простого текста или в HTML формате


.. py:attribute:: MONDAY
.. py:attribute:: TUESDAY
.. py:attribute:: WEDNESDAY
.. py:attribute:: THURSDAY
.. py:attribute:: FRIDAY
.. py:attribute:: SATURDAY
.. py:attribute:: SUNDAY

.. py:attribute:: day_name

	список дней недели в текущей локали


.. py:attribute:: day_abbr

	список аббревиатур дней недели в текущей локали


.. py:attribute:: month_name 

	список названий месяцев в текущей локали


.. py:attribute:: month_abbr

	список аббревиатур месяцев в текущей локали
	

.. py:method:: calendar(<год>[, w][, l][, c][, m])

	:param w: ширина поля с днем
	:param l: количестов символов перевода строки 
	:param c: количество пробелов между месяцами
	:param m: количество месяцев на строке

	возвращает текстовый календарь на указанный год


.. py:method:: firstweekday()

	текущее значение первого дня недели 


.. py:method:: isleap(<год>)

	проверяет указанный год на високосность


.. py:method:: leapdays(<Год1>, <Год2>)

	возвращает количество високосных лет в диапазоне годов


.. py:method:: month(<год>, <месяц>[, <ширина поля с днем>[, <количество символов перевода строки>]])

	возвращает текстовый календарь на указанный месяц в году 


.. py:method:: monthcalendar(<год>, <месяц>)

	возвращает двумерный список всех дней в указанном месяце, распределенных по дням недели. дни выходящие за пределы месяца будут представлены нулями.

	>>> calendar.monthcalendar(2011, 4)
	[[0,0,0,0,1,2,3]...[25,26,27,28,29,30,0]]


.. py:method:: monthrange(<год>, <месяц>)

	возвращает кортеж из двух элементов, количесвто недель в месяце и число дней в месяце

	>>> calendar.monthrange(2011, 4)
	4, 30


.. py:method:: prcal(<год>[, w][, l][, c][, m])

	аналогична :py:meth:`calendar`, но не возвращает календарь, а выводит его.
.. py:method:: prmonth(<год>, <месяц>[, <ширина поля с днем>[, <количество символов перевода строки>]])

	аналогична :py:meth:`month`, но не возвращает календарь, а выводит его


.. py:method:: setfirstweekday(<первый день недели>)

	устанавливает первый день недели для календаря 


.. py:method:: timegm(<struct_time>)

	возвращает число, представляющее количесвто секунд, прошедших с начала эпохи.


.. py:method:: weekday(<год>, <месяц>, <день>)

	возвращает номер дня недели (начинается с 0)


.. py:class:: Calendar([<Первый день недели>=0])

	базовый класс, который наследуют все остальные классы

	>>> calendar.Calendar(O).monthdayscalendar(2011, 4) # 4 - это апрель
	[[0, О, О, О, 1, 2, 3], 
	 [4, 5, б, 7, 8, 9, 10],
	 [11, 12, 13, 14, 15, 16, 17], 
	 [18, 19, 20, 21, 22, 23, 24],
	 [25, 26, 27, 28, 29, 30, О]]


.. py:class:: TextCalendar([<Первый день недели>=0])

	позволяет вывести текст в виде простого текста

	>>> print(calendar.TextCalendar(0).formatyear(2011))

	.. py:method:: formatmonth(<Год>, <Месяц>[, <Ширина поля с днем>[, <Количество символов перевода строки>]])

		возвращает текстовый календарь на указанный месяц в году

		>>> print(calendar.LocaleTextCalendar(O, "Russian Russia.1251").formatmonth(2011, 4))


	.. py:method:: formatyear(<Год>[, w=2][, l=1][, c=6][, m=3])

		:param w: ширина поля с днем
		:param l: количестов символов перевода строки 
		:param c: количество пробелов между месяцами
		:param m: количество месяцев на строке

		возвращает текстовый календарь на указанный год


	.. py:method:: prmonth(<Год>, <Месяц>[, <Ширина поля с днем>[, <Количество символов перевода строки>]])

		метод аналогичен :py:meth:`formatmonth`, но не возвращает календарь в виде строки, а сразу выводит его


	.. py:method:: pryear(<Год>[, w=2][, l=1][, c=6][, m=3])

		метод аналогичен :py:meth:`formatyear`, но не возвращает календарь в виде строки, а сразу выводит его



.. py:class:: LocaleTextCalendar([<Первый день недели>=0][, <название локали>])

	позволяет вывести календарь в виде простого текста. названия месяцев и дней недели выводятся в соответствии с локалью

	>>> print(calendar.LocaleTextCalendar(O, "Russian_Russia.1251").formatyear(2011))


	.. py:method:: formatmonth(<Год>, <Месяц>[, <Ширина поля с днем>[, <Количество символов перевода строки>]])

		возвращает текстовый календарь на указанный месяц в году

		>>> print(calendar.LocaleTextCalendar(O, "Russian Russia.1251").formatmonth(2011, 4))


	.. py:method:: formatyear(<Год>[, w=2][, l=1][, c=6][, m=3])

		:param w: ширина поля с днем
		:param l: количестов символов перевода строки 
		:param c: количество пробелов между месяцами
		:param m: количество месяцев на строке

		возвращает текстовый календарь на указанный год


	.. py:method:: prmonth(<Год>, <Месяц>[, <Ширина поля с днем>[, <Количество символов перевода строки>]])

		метод аналогичен :py:meth:`formatmonth`, но не возвращает календарь в виде строки, а сразу выводит его


	.. py:method:: pryear(<Год>[, w=2][, l=1][, c=6][, m=3])

		метод аналогичен :py:meth:`formatyear`, но не возвращает календарь в виде строки, а сразу выводит его


.. py:class:: HTMLCalendar([<первый день недели>=0])

	позволяет вывести календарь в формате HTML

	>>> print(calendar.HTMLCalendar(0).formatyear(2011))


	.. py:attribute:: cssclasses

		список сss стилей для каждого дня недели


	.. py:method:: formatmonth(<Год>, <месяц>[, <True|False>])

		возвращает HTML календарь на указанный месяц в году. если в третьем параметра стоит значение True, то в заголовке, после месяца, будет указан год. Календарь будет отформатирован с помощью НТМL-таблицы. Для каждой ячейки таблицы задает­ ся стилевой класс, с помощью которого можно управлять внешним видом календаря. Названия стилевых классов доступны через атрибут cssclasses, который содержит спи­сок названий для каждого дня недели.

		>>> calendar.HTMLCalendar().cssclasses
		['mon','tue','wed','thu','fri','sat','sun']


	.. py:method:: formatyear(<Год>[, <количесвто месяцев на строке>])

		возвращает HTML календарь на указанный год


	.. py:method:: formatyearpage(<год>[, <width>=3][, <css>='calendar.css'][, <encoding>])

		:param width: количесвто месяцев строки
		:param css: название файла с таблицей стилей
		:param encoding: кодировка файла

		возвращает HTML календарь на указанный год в виде отдельной XHTML страницы


.. py:class:: LocaleHTMLCalendar([<первый день недели>=0][, <азвание локали>])

	позволяет вывести календарь в формате HTML. названия месяцев и дней недели выводятся в соответствии с указанной локалью

	>>> print(calendar.Loca1eHTMLCa1endar(O, "Russian_Russia.1251").formatyearpage(2011, encoding="windows-1251"))