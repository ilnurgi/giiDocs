.. py::module:: weakref

weakref
=======

    >>> class A: pass
    >>> a = A()
    >>> ar = weakref.ref(a) # Создаст слабую ссылку на a
    >>> print ar
    <weakref at 0x135a24; to ‘instance’ at 0x12ce0c>
    >>> print ar()
    <__main__.A instance at 12ce0c>
    >>> del a
    >>> print ar()
    None


.. py::module:: ref(object[, callback])

    Создает слабую ссылку на объект.

    :param object: объект
    :param callback: функция, которая должна вызываться перед удалением объекта object. Эта функция должна принимать единственный аргумент, в котором ей будет передаваться слабая ссылка на объект. На один и тот же объект может указывать сразу несколько слабых ссылок. В этом случае функции callback будут вызываться в порядке, обратном порядку создания слабых ссылок – от более свежих к более старым. Доступ к объекту object можно получить, обратившись к слабой ссылке как к функции без аргументов. Если оригинальный объект был удален, функция вернет None. Функция ref() в действительности принадлежит к типу ReferenceType, который может использоваться в операциях проверки типов и создания производных классов.


.. py::method:: proxy(object[, callback])

    Создает прокси-объект со слабой ссылкой на заданный объект. Возвращаемый объект в действительности является оберткой вокруг оригинального объекта, обеспечивающей доступ к его атрибутам и методам. Пока будет существовать оригинальный объект, прокси-объект будет имитировать его поведение. Однако после уничтожения оригинального объекта любая попытка обращения к прокси-объекту будет возбуждать исключение weakref.ReferenceError, чтобы показать, что оригинальный объект был удален. 
    Прокси-объект может иметь тип либо `ProxyType`, либо `CallableProxyType`, в зависимости от того, является ли оригинальный объект вызываемым объектом.

    :param object: объект
    :param callback: функция, которая должна вызываться перед удалением объекта object. Эта функция должна принимать единственный аргумент, в котором ей будет передаваться слабая ссылка на объект. На один и тот же объект может указывать сразу несколько слабых ссылок. В этом случае функции callback будут вызываться в порядке, обратном порядку создания слабых ссылок – от более свежих к более старым. Доступ к объекту object можно получить, обратившись к слабой ссылке как к функции без аргументов. Если оригинальный объект был удален, функция вернет None. Функция ref() в действительности принадлежит к типу ReferenceType, который может использоваться в операциях проверки типов и создания производных классов.


.. py:method:: getweakrefcount(object)

    Возвращает количество слабых ссылок и объектов-оберток, указывающих на объект.


.. py:method:: getweakrefs(object)

    Возвращает список всех слабых ссылок и объектов-оберток, указывающих на объект.

.. py:class:: WeakKeyDictionary([dict])

    Создает словарь, в котором ключи представлены слабыми ссылками. Когда количество обычных ссылок на объект ключа становится равным нулю, соответствующий элемент словаря автоматически удаляется. Поскольку слабые ссылки могут создаваться только для объектов определенных типов, существует большое число ограничений на допустимые типы объектов ключей. В частности, встроенные строки не могут использоваться в качестве ключей со слабыми ссылками. Однако экземпляры пользовательских классов, объявляющих метод __hash__(), могут играть роль ключей. 

    :param dict dict: словарь, элементы которого добавляются в возвращаемый объект типа WeakKeyDictionary.

    .. py:method:: iterkeyrefs() 

        Возвращает слабые ссылки на ключи.

    .. py:method:: keyrefs() 

        Возвращает слабые ссылки на ключи.
 

.. py:class:: WeakValueDictionary([dict])

    Создает словарь, в котором значения представлены слабыми ссылками. Когда количество обычных ссылок на объект значения становится равным нулю, соответствующий элемент словаря автоматически удаляется.

    :param dict dict: словарь, элементы которого добавляются в возвращаемый объект типа WeakKeyDictionary.

    .. py:method:: valuerefs()

        Возвращает слабые ссылки на значения.

    .. py:method:: itervaluerefs()

        Возвращает слабые ссылки на значения.


.. py:attribute:: ProxyTypes

    Это кортеж (ProxyType, CallableProxyType), который может использоваться для проверки на принадлежность объекта к одному из типов прокси-объектов, создаваемых функцией proxy(), например isinstance(object, ProxyTypes).