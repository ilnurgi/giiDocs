.. title:: PyQt4.QtCore.QMutex

.. meta::
    :description: PyQt4.QtCore.QMutex
    :keywords: PyQt4.QtCore.QMutex

.. py:currentmodule:: PyQt4.QtCore

QMutex
======

.. py:class:: QMutex([mode=QtCore.QMutex.NonRecursive])

    позволяет блокировать ресурс. 

    `mode` может быть:

    - `QMutex.NonRecursive` - nоток может за­просить блокировку только единожды; после снятия блокировка может быть запрошена снова
    - `QMutex.Recursive` - поток может заnросить блокировку несколько раз; чтобы nолностью снять блокировку, следует вызвать метод :py:meth:`unlock()` соответствующее количество раз

    .. py:method:: lock()

        устанавливает блокировку. Если ресурс уже заблокирован, то работа текущего потока приостанавливается до снятия блокировки.

    .. py:method:: tryLock([time])

        устанавливает блокировку. Если блокировка успешно установлена, возвращает `True`, иначе если заблокирован другим потоком - `False`. 

        :param int time: время ожидания в миллисекундах. можно задать отрицательное значение, тогда метод будет аналогичен :py:meth:`lock()`

    .. py:method:: unlock()

        снимает блокировку


.. py:class:: QMutexLocker(mutex)

    принимает :py:class:`QMutex` объект, блокирует его, и при вызове деструктора данного объекта, разблокирует. Также можно использовать как контекстный менеджер внутри `with ... as ...:`




